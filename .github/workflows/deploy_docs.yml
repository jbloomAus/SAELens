name: Deploy Docs
on:
  push:
    branches:
      - main
      - alpha
    paths-ignore:
      - '.vscode/**'
      - '.gitignore'
  pull_request:
    branches:
      - main
      - alpha
    paths-ignore:
      - '.vscode/**'
      - '.gitignore'
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      HF_TOKEN: ${{ secrets.HF_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for mike to work properly
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Cache Huggingface assets
        uses: actions/cache@v4
        with:
          key: huggingface-${{ runner.os }}-3.11-${{ hashFiles('**/pyproject.toml') }}
          path: ~/.cache/huggingface
          restore-keys: |
            huggingface-${{ runner.os }}-3.11-
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-3.11-0
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-3.11-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            venv-${{ runner.os }}-3.11-
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction
      - name: Set Python Path
        run: echo "PYTHONPATH=$PYTHONPATH:$PWD" >> $GITHUB_ENV
      - name: Configure Git
        if: github.event_name != 'pull_request'
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
      - name: Deploy release docs
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          poetry run mike deploy --push --update-aliases $VERSION
          
          # If stable release (no pre-release identifiers), also update latest
          if [[ ! "$VERSION" =~ (alpha|beta|rc) ]]; then
            poetry run mike deploy --push --update-aliases latest $VERSION
            poetry run mike set-default --push latest
          fi
      - name: Deploy main branch docs
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run mike deploy --push --update-aliases dev main
          # Only set as default if no stable release exists
          if ! poetry run mike list | grep -q "latest"; then
            poetry run mike set-default --push dev
          fi
      - name: Deploy alpha branch docs
        if: github.event_name == 'push' && github.ref == 'refs/heads/alpha'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          poetry run mike deploy --push --update-aliases pre-release alpha
